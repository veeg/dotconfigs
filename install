#! /usr/bin/env ruby
# encoding: UTF-8

RUST_PACKAGE = [
  "alacritty",
  "dua",
  "ripgrep",
  "starship",
]

def package_bin(package)
  case package
  when 'ripgrep' then 'rg'
  else
    package
  end
end

def log(msg)
  $stdout.puts "- #{msg}"
end

# Return true if installed
def install(bin_name, cmd)
  `which #{bin_name} 2>/dev/null`
  if $? != 0
    log "installing #{bin_name}"
    `#{cmd}`
    if $? != 0
      log "ERROR: failed to install through command '#{cmd}'"
      false
    else
      true
    end
  else
    false
  end
end

def install_pkgmng(bin_name, optional_package_name = nil)

  package_name =
    case $DIST
    when 'Fedora'
      optional_package_name
    when 'Ubuntu'
      current = optional_package_name || bin_name

      case current
      when 'openssl-devel' then 'libssl-dev'
      else current
      end
    end

  opt = case $DIST
  when 'Fedora'
    opt = "sudo dnf install #{package_name}"
  when 'Ubuntu'
    opt = "sudo apt install #{package_name}"
  end
  log "Ensuring #{package_name}  is installed"
  `#{opt}`
  if $? != 0
    log "ERROR: during installation of package #{package_name}"
  end
end


if __FILE__ == $PROGRAM_NAME

    # Detect distribution
    $DIST = `cat /etc/os-release | grep "^NAME=" | cut -d = -f 2`
    if $DIST[0] == '"'
      $DIST = $DIST[1..-3]
    end
    $stdout.puts "Running dotconfigs system install on distribution #{$DIST}"

    dotconfigs_dir = File.dirname(File.expand_path(__FILE__))

    Dir.glob("#{dotconfigs_dir}/dot.*") do |file|
      to = File.basename(file)
      to = "~/#{to[3..-1]}"
      log "Soft-linking dotfile #{to}"
      `ln -Tfs #{file} #{to}`
    end

    # Install vim-plug - the lightweight plugin manager
    `stat ~/.vim/autoload/plug.vim 2>/dev/null`
    if $? != 0
      log "installing vim-plug"
      `curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim`
    end

    # Install zsh
    install_pkgmng "zsh"
    # Install a zsh plugin manager: zplug
    install "zplug", "curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh"

    # Install gvim for vim with +clipboard
    install_pkgmng "gvim", "vim-gtk3"

    # Install system compilation/development tools/libraries
    install_pkgmng "gcc"
    install_pkgmng "g++"
    install_pkgmng "cmake"
    install_pkgmng "openssl-devel", "openssl-devel"
    install_pkgmng "fontconfig-devel", "libfontconfig-dev"
    install_pkgmng "libxcb1-devel", "libxcb1-dev"
    install_pkgmng "libxcb-render0-devel", "libxcb-render0-dev"
    install_pkgmng "libxcb-shape0-devel", "libxcb-shape0-dev"
    install_pkgmng "libxcb-xfixes0-devel", "libxcb-xfixes0-dev"
    install_pkgmng "tmux"

    # Install rustup
    install "rustup", "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"

    `which cargo`
    if $? != 0
      log "Must source the shell to continue, then rerun"
      log "\nsource $HOME/.cargo/env"
      exit 1
    end

    # Install whatever rust binaries not present
    RUST_PACKAGE.each do |rust|
      `which #{package_bin(rust)} 2>/dev/null`
      if $? != 0
        log "Installing/compiling #{rust}"
        `cargo install #{rust}`
      else
        log "#{rust} already installed"
      end
    end

    # Installing desktop entry
    $stdout.puts "curl -sL https://github.com/alacritty/alacritty/raw/master/extra/linux/Alacritty.desktop > /tmp/alacritty.desktop & sudo desktop-file-install /tmp/alacritty.desktop"
    $stdout.puts "curl -sL https://github.com/alacritty/alacritty/raw/master/extra/logo/alacritty-term.svg > /usr/share/pixmaps/Alacritty.svg"
    $stdout.puts "sudo update-desktop-database"
    # Use alacritty are default
    `gsettings set org.gnome.desktop.default-applications.terminal exec 'alacritty'`

    $stdout.puts "Finished dotconfigs system install"
    $stdout.puts "PS: Remember to change shell: `chsh -s $(which zsh)`"
    $stdout.puts "PS: Remember to install vim-plugins"
    $stdout.puts "PPS: Really should get that automated"
    $stdout.puts " vim -c :PlugInstall"
end
